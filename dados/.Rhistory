data(iris)
iris
head(iris)
library(magrittr)
iris[, Species]
iris[, 'Species']
iris[, 'Species']
iris[, c('Species')]
iris[, 'Species'][]
iris[, 'Species'] %>% data.frame
iris['Species']
iris[which(iris$Species == 'setosa')]
iris[which(iris$Species == 'setosa'), ]
iris[which(iris$Species == 'setosa'), ]
iris[iris$Species == 'setosa', ]
which(iris$Species == 'setosa')
library(tidyverse)
turns <- crossing(trial = 1:100000,
turn = 1:20) %>%
mutate(move_x = sample(2, n(), replace = TRUE) *
sample(c(1, -1), n(), replace = TRUE),
move_y = (3 - abs(move_x)) *
sample(c(1, -1), n(), replace = TRUE)) %>%
group_by(trial) %>%
mutate(position_x = cumsum(move_x),
position_y = cumsum(move_y)) %>%
ungroup()
turns
turns %>% filter(turn == 20) %>% summarize(mean(position_x == 0 & position_y == 0))
sqrt(2)
sqrt(1000)
sqrt(10000)
sqrt(1000)
sqrt(2000)
sqrt(2)
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x))
library(ggplot2)
p <- ggplot(data = data.frame(x = 0), mapping = aes(x = x))
p + stat_function(fun = sqrt) + xlim(0, 100)
p + stat_function(fun = sqrt) + stat_function(fun = function(x) 1/(2*sqrt(x))) + xlim(0, 100)
p + stat_function(fun = sqrt) + stat_function(fun = function(x) 1/(2*sqrt(x))) + xlim(0, 200)
p + stat_function(fun = sqrt) + stat_function(fun = function(x) 1/(2*sqrt(x))) + xlim(0, 50)
p + stat_function(fun = sqrt) + stat_function(fun = function(x) 1/(2*sqrt(x))) + xlim(0, 20)
p + stat_function(fun = sqrt) + stat_function(fun = function(x) 1/(2*sqrt(x))) + xlim(1, 100)
p + stat_function(fun = sqrt) + stat_function(fun = function(x) 1/(2*sqrt(x))) + xlim(0, 100)
p + stat_function(fun = function(x) 1/x)
p + stat_function(fun = function(x) 1/x) + xlim(0, 100)
p + stat_function(fun = function(x) 1/x) + xlim(0, 10000)
p + stat_function(fun = function(x) 1/x) + xlim(0, 100000000)
p + stat_function(fun = function(x) 1/x) + xlim(0, 1000)
p + stat_function(fun = function(x) x^3) + stat_function(fun = function(x) 3x^2) + stat_function(fun = function(x) 6x)
p + stat_function(fun = function(x) x^3) + stat_function(fun = function(x) 3x^2) + stat_function(fun = function(x) 6x) + xlim(0, 100)
p + stat_function(fun = function(x) x^3) + stat_function(fun = function(x) 3*x^2) + stat_function(fun = function(x) 6*x) + xlim(0, 100)
p + stat_function(fun = function(x) x^3) + stat_function(fun = function(x) 3*x^2) + stat_function(fun = function(x) 6*x) + xlim(-100, 100)
p + stat_function(fun = function(x) x^3) + stat_function(fun = function(x) 3*x^2) + stat_function(fun = function(x) 6*x) + xlim(-1000, 1000)
p + stat_function(fun = function(x) x^3) + stat_function(fun = function(x) 3*x^2) + stat_function(fun = function(x) 6*x) + xlim(-50, 50)
p + stat_function(fun = function(x) x^3) + stat_function(fun = function(x) 3*x^2) + stat_function(fun = function(x) 6*x) + xlim(-20, 20)
p + stat_function(fun = function(x) x^3, col = 'green') + stat_function(fun = function(x) 3*x^2, col = 'blue') + stat_function(fun = function(x) 6*x, col = 'red') + xlim(-20, 20)
p + stat_function(fun = function(x) x^3) + stat_function(fun = function(x) 3*x^2) + stat_function(fun = function(x) 6*x) + xlim(-10, 10)
p + stat_function(fun = function(x) x^3, col = 'green') + stat_function(fun = function(x) 3*x^2, col = 'blue') + stat_function(fun = function(x) 6*x, col = 'red') + xlim(-20, 20) + xlim(-10, 10)
p + stat_function(fun = function(x) x^3, col = 'green') + stat_function(fun = function(x) 3*x^2, col = 'blue') + stat_function(fun = function(x) 6*x, col = 'red') + xlim(-10, 10)
p + stat_function(fun = function(x) x^3 - x^2) + xlim(0, 1000)
p + stat_function(fun = function(x) x^3 - x^2) + xlim(-100, 100)
p + stat_function(fun = function(x) x^3 - x^2, size = 3) + xlim(-100, 100)
p + stat_function(fun = function(x) x^3 - x^2, size = 1.5) + xlim(-100, 100)
p + stat_function(fun = function(x) x^3 - x^2, size = 1.2) + xlim(-100, 100)
p + stat_function(fun = function(x) x^3 - x^2, size = 1) + xlim(-100, 100)
p + stat_function(fun = function(x) x^3 - x^2, size = 1) + xlim(-100, 1000000)
p + stat_function(fun = function(x) x^3 - x^2, size = 1) + xlim(-100, 1000)
p + stat_function(fun = function(x) x^3 - x^2, size = 1) + xlim(-100, 100)
p + stat_function(fun = function(x) x^3 - x^2, size = 1) + xlim(-1, 10)
p + stat_function(fun = function(x) x^3 - x^2, size = 1) + xlim(-10, 10)
p + stat_function(fun = function(x) (x^3 - x^2), size = 1) + xlim(-10, 10)
p + stat_function(fun = function(x) x^3 - x^2, size = 1) + xlim(-10, 10)
p + stat_function(fun = function(x) x^3 - x^2) + xlim(-10, 10)
p + stat_function(fun = function(x) x^3 - x^2) + xlim(-10, 10)
library(ggplot2)
p = ggplot(data = data.frame(x = 0))
p + stat_function(fun = function(x) x^3 - x^2) + coord_cartesian(xlim = -1, 1)
p = ggplot(data = data.frame(x = 0), mapping = aes(x = x))
p + stat_function(fun = function(x) x^3 - x^2) + coord_cartesian(xlim = -1, 1)
p + stat_function(fun = function(x) x^3 - x^2)
p + stat_function(fun = function(x) x^3 - x^2) + xlim(-100, 100)
p + stat_function(fun = function(x) x^3 - x^2) + coord_cartesian(xlim = -1, 1)
p + stat_function(fun = function(x) x^3 - x^2) + xlim(-1, 1)
p + stat_function(fun = function(x) x^3 - x^2) + + stat_function(fun = function(x) 3*x^2 - 2*x) + xlim(-1, 1)
p + stat_function(fun = function(x) x^3 - x^2) + stat_function(fun = function(x) 3*x^2 - 2*x) + xlim(-1, 1)
p + stat_function(fun = function(x) x^3 - x^2) + stat_function(fun = function(x) 3*x^2 - 2*x) + stat_function(fun = function(x) 6*x - 2) + xlim(-1, 1)
p + stat_function(fun = function(x) x^3 - x^2) + stat_function(fun = function(x) 3*x^2 - 2*x, col = 'skyblue') + stat_function(fun = function(x) 6*x - 2, col = 'red') + xlim(-1, 1)
p + stat_function(fun = function(x) x^3 - x^2) + stat_function(fun = function(x) 3*x^2 - 2*x, col = 'skyblue') + stat_function(fun = function(x) 6*x - 2, col = 'red') + xlim(-0.5, 1)
func = function(lambda, x): -lambda*exp(-lambda*x)
func = function(lambda, x) -lambda*exp(-lambda*x)
func = function(lambda, x) -lambda*exp(-lambda*x)
func(2)
func(2, 2)
func(2, 2)
func = function(lambda, x) lambda*exp(-lambda*x)
func(2, 2)
func(2, 2)
?dexp
dexp(2, 2)
library(ggplot2)
p = ggplot(data = data.frame(x = 0), aes(x = x))
o + stat_function(fun = -x^4) + xlim(0, 10)
p + stat_function(fun = -x^4) + xlim(0, 10)
p + stat_function(fun = function(x) -x^4) + xlim(0, 10)
p + stat_function(fun = function(x) -x^4) + xlim(0, 100)
p + stat_function(fun = function(x) -x^4) + xlim(0, 10000)
p + stat_function(fun = function(x) 1/x) + xlim(0, 10000)
p + stat_function(fun = function(x) 1/x) + stat_function(fun = function(x) -1/(2*x^2)) + xlim(0, 10000)
p + stat_function(fun = function(x) 1/x) + stat_function(fun = function(x) -1/(2*x^2)) + xlim(0, 10000)
p + stat_function(fun = function(x) 1/x) + stat_function(fun = function(x) -1/(x^2)) + xlim(0, 10000)
p + stat_function(fun = function(x) 1/x) + stat_function(fun = function(x) -1/(x^2)) + xlim(0, 10000)
p + stat_function(fun = function(x) x^-1) + stat_function(fun = function(x) -1/(x^2)) + xlim(0, 10000)
p + stat_function(fun = function(x) x^-1) + stat_function(fun = function(x) -1/(x^-2)) + xlim(0, 10000)
p + stat_function(fun = function(x) 1/x) + stat_function(fun = function(x) -1/(x^-2)) + xlim(0, 10000)
p + stat_function(fun = function(x) 1/x) + stat_function(fun = function(x) -1/(x^2)) + xlim(0, 10000)
p + stat_function(fun = function(x) 1/x) + stat_function(fun = function(x) -1/(x^2)) + xlim(0, 10000)
p + stat_function(fun = exp) + xlim(0, 10000)
p + stat_function(fun = exp()) + xlim(0, 10000)
p + stat_function(fun = function(x) exp(x)) + xlim(0, 10000)
p + stat_function(fun = exp()) + xlim(0, 10000)
p + stat_function(fun = exp + xlim(0, 10000)
p + stat_function(fun = exp) + xlim(0, 10000)
?exp
exp(1)
p + stat_function(fun = function(x) exp(x)) + xlim(0, 10000)
p + stat_function(fun = function(x) exp(x)) + xlim(0, 100)
exp(100)
1+1/12
x = (1+1/12)
x
x*x
*x
x^2
x^12
10^-6
10^-6/1e-12
10^-6/1e-12
?rinf
?rnorm
?runif
x = runif(100, 0, 10)
x
x - mean(x)
a = x - mean(x)
mean(a)
x
sum(x^2) - length(x)*mean(x)^2
sum((x - mean(x))^2)
sqrt(2^2 + 1)
2/3
1-2/3
1+(-2/3)
library(ggplot2)
p = ggplot(data = data.frame(x = 0), aes(x = x))
p + stat_function(fun = function(x) x - 2 / x - 3)
p + stat_function(fun = function(x) x - 2 / x - 3) + xlim(-100, 100)
p + stat_function(fun = function(x) x - 2 / x - 3) + xlim(-10, 10)
p + stat_function(fun = function(x) x + 2 / x + 3) + xlim(-10, 10)
p + stat_function(fun = function(x) x + 2 / x + 3) + xlim(-4, 4)
-2.9999999+2/2.9999999+3
-2.9999999+2/-2.9999999+3
-2.9999999+2/-2.9999999+3
p + stat_function(fun = function(x) x + 2 / x + 3) + xlim(-4, 4)
f = function(x) x + 2 / x + 3
seq(-4, -3, .1)
seq(-4, -3, .01)
seq(-4, -3, .01)
xs = seq(-4, -3, .01)
ys = f(xs)
ys
f(-3)
f = function(x) (x + 2) / (x + 3)
f(-3)
p + stat_function(fun = function(x) (x + 2) / (x + 3)) + xlim(-4, 4)
p + stat_function(fun = function(x) (x + 2) / (x + 3)) + xlim(-5, 2)
ys = f(xs)
ys
f = function(x) (2 - x) / (x - 1)^2
ys = f(xs)
ys
p + stat_function(fun = function(x) (2 - x) / (x - 1)^2) + xlim(-5, 2)
p + stat_function(fun = function(x) (2 - x) / (x - 1)^2) + xlim(0, 2)
p + stat_function(fun = function(x) (x^3 + 5x) / (2*x^3 - x^2 + 4)) + xlim(0, 2)
p + stat_function(fun = function(x) (x^3 + 5*x) / (2*x^3 - x^2 + 4)) + xlim(0, 2)
p + stat_function(fun = function(x) (x^3 + 5*x) / (2*x^3 - x^2 + 4)) + xlim(0, 100000)
library(ggplot2)
p = ggplot(data = data.frame(x = 0), aes(x = x))
f = function(x) 3*x^5 -5*x^3 + 1
p + stat_function(fun = f) + xlim(-2, 2)
f(-1)
p + stat_function(fun = f) + xlim(-1.1, 1.1)
f = function(x) 4*x^2 - 1/x
p + stat_function(fun = f) + xlim(-1.1, 1.1)
p + stat_function(fun = f) + xlim(-10, 10)
p + stat_function(fun = f) + xlim(-1.1, 1.1)
p + stat_function(fun = f) + xlim(-10, 10)
p + stat_function(fun = f) + xlim(-1.1, 1.1)
x <- rnorm(10000, mean = 0.5, sd = 1)
library(magrittr)
x %>% '['(100)
x %>% '['(:100)
x[:100]
x
x[100]
x[100:]
x[100,]
x[1:100]
x[1:100]
x[1:100:2]
1:100:2
x[seq(1, 100, 2)]
seq(1, 100, 2)
x[seq(1, 100, 2)]
sample(x, 100)
sample(x, 100) %>% sum
sample(x, 100) %>% mean
?replicate
S = vector(100)
S = vector()
S = replicate(100, sample(x, 100))
S
S[1]
S[0]
S[1]
S[2]
S
S = replicate(100, sample(x, 100), simplify = "vectir")
S = replicate(100, sample(x, 100), simplify = "vector")
S
S = replicate(100, sample(x, 100), simplify = "matrix")
S
S[, 100]
S %>% dim
S %>% length
library(ggplot2)
sapply(x, sum)
sapply(x, sum) %>% dim
sapply(x, sum) %>% length
lapply(S, sum)
S[1000, 10000]
S[100, 1000]
S[100, 100]
S %>% dim
S[, 1]
S[1, ]
matrix(S)
matrix(S, 100, 100)
matrix(S, 100, 100)[, 1]
S = matrix(S, 100, 100)
mapply(sum, S, 1)
mapply(sum, S, 1) %>% dim
mapply(sum, S, 1) %>% length
S
S = replicate(100, sample(x, 100), simplify = "matrix")
S = replicate(100, sample(x, 100))
S
S %>% head
sapply(sum, S)
sapply(S, sum
)
for (i in 1:dim(S)[1]){}
for (i in 1:dim(S)[1]) { sum(S[, i])}
sums = for (i in 1:dim(S)[1]) { sum(S[, i])}
sums
for (i in 1:dim(S)[1]) { sum(S[, i])}
sums = vector()
for (i in 1:dim(S)[1]) { sums[i] = sum(S[, i])}
sums
series = get_series(c(
Spread = 20786,
Selic = 4189,
Inflacao = 433,
Compuls = 1849,
Inadimplencia = 21082), data_inicial)
library(tidyverse)
library(rbcb)
install.packages("rbcb")
install.packages("sidrar")
?get_sidra
library(sidrar)
?get_sidra
get_sidra(2295)
View(get_sidra(2295))
install.packages("ecoseries")
?series_ipeadata
library(ecoseries)
?series_ipeadata
library(ipeadata)
install.packages("installr")
library(installr)
updateR()
source('~/mono/dados/Dados.R')
library(data.table)
updateR()
library(installr)
library(tidyverse)
install.packages("scales")
library(tidyverse)
library(data.table)
library(ggplot2)
setwd("~/mono/dados")
# -----------------------------------------------
df <- fread("series_economicas.csv")[, -1] %>% as_tibble %>% mutate(date = as.Date(date))
date_limit <- c(min(df$date), max(df$date))
date_limit
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%b %y",
date_breaks = "1 year") +
theme_classic()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%b %y",
date_breaks = "12 months") +
theme_classic()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%b %y") +
theme_classic()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
source('~/mono/dados/Graficos.R')
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
date_limit
sapply(date_limit, class)
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
theme_classic()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
df
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%b %y") +
theme_classic()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
library(lubridate)
fread("series_economicas.csv")[, -1] %>% as_tibble
# -----------------------------------------------
df <- fread("series_economicas.csv")[, -1] %>% as_tibble %>%
mutate(date = ymd(date))
df
date_limit <- c(min(df$date), max(df$date))
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%b %y") +
theme_classic()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%b %y") +
theme_void()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
classic
classic
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%b %y") +
theme_classic()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
library(ggthemes)
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%b %y") +
theme_tufte()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%b %y",
date_breaks = "1 year") +
theme_tufte()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%Y",
date_breaks = "1 year") +
theme_tufte()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%Y",
date_breaks = "1 year") +
theme_hc()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
tufte
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%Y",
date_breaks = "1 year") +
theme_tufte()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%Y",
date_breaks = "1 year") +
theme_tufte(base_family = "Consolas")
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%Y",
date_breaks = "1 year") +
theme_hc()
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%Y",
date_breaks = "1 year") +
theme_hc()
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
library(cowplot)
plt <- ggplot(df) + labs(x = NULL, y = NULL) +
scale_x_date(limits = date_limit,
date_labels = "%Y",
date_breaks = "1 year")
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total")
?ggsave
plt + geom_line(aes(date, ihh)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total") +
ggsave("Spread.png")
df %>% str
df %>% glimpse
plt + geom_line(aes(date, spread)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total") +
ggsave("Spread.png")
plt + geom_line(aes(date, Spread)) +
ggtitle("Spread",
"Spread médio das operações de crédito com recursos livres - Total") +
ggsave("Spread.png")
plt + geom_line(aes(date, ihh)) +
ggtitle("Índice de Herfindahl-Hirschmann")
df %>% glimpse
plt + geom_line(aes(date, Inflacao)) +
ggtitle("Inflação", "Índice nacional de preços ao consumidor-amplo (IPCA)")
plt + geom_line(aes(date, Selic)) +
ggtitle("Selic", "Taxa de juros - Selic acumulada no mês anualizada base 252")
plt + geom_line(aes(date, Inadimplencia)) +
ggtitle("Inadimplência",
"Inadimplência da carteira de crédito - Total")
df %>% glimpse
library(ipeadatar)
install.packages("ipeadatar")
library(ipeadatar)
ihh <- fread("ihh.csv") %>%
as_tibble %>%
mutate(date = as.Date(date)) %>%
arrange(date) %>%
select(date, ativos) %>%
rename(ihh = ativos)
ihh
ihh %>% tail()
source('~/mono/dados/Dados.R')
df
df %>% tail
df <- right_join(ihh, concat(series), by = "date") %>%
filter(date <= as.Date("2017-12-01")) %>%
as_tibble %>%
fill(ihh)
write.csv(df, file = "series_economicas.csv")
?right_join
source('~/mono/dados/Dados.R')
df
df %>% tail
series <- get_series(c(
Spread = 20786,
Selic = 4189,
Inflacao = 433,
Compulsorio = 1849,
Inadimplencia = 21082,
ProducaoIndustrial = 21859), data_inicial, as = "tibble")
series <- get_series(c(
Spread = 20786,
Selic = 4189,
Inflacao = 433,
Compulsorio = 1849,
Inadimplencia = 21082,
ProducaoIndustrial = 21859), data_inicial, as = "tibble")
